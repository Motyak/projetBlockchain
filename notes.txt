CLONAGE DU REPO GIT CONTENANT LES BENCHS

git clone https://github.com/hyperledger/caliper-benchmarks.git
cd caliper-benchmarks
git checkout v0.3.2

ON CLEAN LES CONTENEURS ET TOUTES LES IMAGES EXISTANTES

docker rm $(docker ps -aq)
docker image prune -a

INSTALLATION DE CALIPER

user@ubuntu:~/caliper-benchmarks$ npm init -y
user@ubuntu:~/caliper-benchmarks$ npm install --only=prod \
    @hyperledger/caliper-cli@0.3.2
user@ubuntu:~/caliper-benchmarks$ npx caliper launch master \
    --caliper-bind-sut sawtooth:1.0.5 \
    --caliper-workspace . \
    --caliper-benchconfig benchmarks/scenario/simple/config.yaml \
    --caliper-networkconfig networks/sawtooth/simplenetwork/sawtooth.json

On créé un docker-compose.yaml à la racine du répertoire caliper-benchmarks

(VERSION DOCKER-COMPOSE.YAML)
version: '2'

services:

  caliper:
    container_name: caliper
    image: hyperledger/caliper:0.3.2
    command: launch master
    environment:
      - CALIPER_BIND_SUT=sawtooth:1.0.5
      - CALIPER_BENCHCONFIG=benchmarks/scenario/simple/config.yaml
      - CALIPER_NETWORKCONFIG=networks/sawtooth/simplenetwork/sawtooth.json
      - CALIPER_WORKSPACE=/hyperledger/caliper/workspace
    volumes:
      - ~/caliper-benchmarks:/hyperledger/caliper/workspace

________________________________________

Je pensais pouvoir lancer un bench rapidement en apprenant que l'on pouvait utiliser Caliper
avec Docker mais au final impossible de conclure le moindre test, que ça soit via 
l'installation NPM ou Docker-compose.
Je suis pourtant les instructions de la doc à la lettre et utilise les mêmes versions
qu'eux.
J'ai aussi remarqué que le support de Sawtooth avait été retiré depuis la version 0.4 de Caliper.

La solution serait peut-être de faire fonctionner un de leur test Sawtooth (au moment où
celui-ci était encore supporté) et de l'adapter pour le faire fonctionner avec notre
propre réseau Sawtooth (plutôt que de laisser Caliper monter un réseau lui-même).















_____________________________


Pour faire le 'npm install request --save' il faudrait que je lance la commande en entrypoint
(après les autres entrypoint de l'image).

On peut faire :
docker run -it --entrypoint /bin/sh hyperledger/caliper:0.3.2
pour bypass l'entrypoint de l'image mais du coup le workspace est initiallement vide.

Pour reverse-engineer le Dockerfile d'une image :
alias dfimage="docker run -v /var/run/docker.sock:/var/run/docker.sock --rm alpine/dfimage"
dfimage -sV=1.36 <nom de l'image:version>
L'image est basée sur la distribution alpine donc elle compile node from scratch
(donc la construction de l'image prend beaucoup de temps, surtout sur une VM).
